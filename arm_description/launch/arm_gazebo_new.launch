<launch>
    <arg name="arg_x" default="0.00" />
    <arg name="arg_y" default="0.00" />
    <arg name="arg_z" default="0.00" />
    <arg name="arg_R" default="0.00" />
    <arg name="arg_P" default="0.00" />
    <arg name="arg_Y" default="0.00" />
    
    <!--Urdf file path-->
    <param name="robot_description" command="$(find xacro)/xacro '$(find arm_description)/urdf/arm.urdf.xacro'"/>
    
    <!--spawn a empty gazebo world-->
    <include file="$(find gazebo_ros)/launch/empty_world.launch" />
    <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 40" />
    
    <!--spawn model-->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-x $(arg arg_x) -y $(arg
    arg_y) -z $(arg arg_z) -Y $(arg arg_Y) -param robot_description -urdf -model arm " />

    <rosparam command="load" file="$(find arm_description)/config/arm_control.yaml" />
    <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>
    <rosparam command="load" file="$(find arm_description)/config/joint_state_controller.yaml" />
    <node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>

    <!-- Robot State Publisher for TF of each joint: publishes all the current states of the joint, then RViz
    can visualize -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen"/>
</launch>

